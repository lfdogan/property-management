(function() {
     function MyAccountCtrl(Data) {
         

         this.Data = Data;
         this.toggleMyAccountDropdown = Data.toggleMyAccountDropdown();
         this.followMyAccountLink = Data.followMyAccountLink();
         this.myPortfolio = Data.myPortfolio();
         this.myBuildings = Data.myBuildings();
         this.billsOwnerDraw = Data.billsOwnerDraw();
         this.allEmployees = Data.allEmployees();
         
         
         this.title = "My Profile";

         

         
         Data.followMyAccountLink();


         /* new variables setColumnSort and reverse are used to sort table data by column
         * setColumnSort gets information from Data.js inital value is 'payDate'
         * reverse will sort descending for reverse=true, ascending for reverse=false
         * function order() checks if user clicks on same column heading: if true reverse will switch order
         * if false user clicked on different column so set order to descending
         */
         this.setColumnSort = Data.globalcolumnToSortBy;
         this.reverse = true;
         this.order = function(setColumnSort) {    
             if (this.setColumnSort === setColumnSort) { 
                     this.reverse = !this.reverse;
                 } else this.reverse = true;
             this.setColumnSort = setColumnSort;
         };

/************************** FOR ADDING NEW PROPERTY MANAGEMENT TEAM MEMBER **************************/
/*
         var employeesRef = new Firebase("https://property-management-lfdogan.firebaseio.com/employees");
        
         var teamName = document.getElementById('teamName');
         var teamRole = document.getElementById('teamRole');
         var teamPhoneExt = document.getElementById('teamPhoneExt');
         var teamEmail = document.getElementById('teamEmail');
   
         
         
         //when user clicks on update button... save to firebase:
         //.set() replaces previous value of 'currentMessage' child with new value from input box
         //.push() adds a new unique key and new value to 'allMessages' child. Generate a reference to a new location and add some data using push(). Calling push() will return a reference to the new data path, which you can use to get the value of its ID or set data to it. 
         // Get the unique ID generated by push(). Calling key() on our push() reference gives us the value of the unique ID.
         // Clear out value of input textbox to empty to prepare for next entry     
         var postID;
         var newPostRef;
         this.addNew = function () {
             newPostRef = employeesRef.push();
             newPostRef.set({//replaces all data with new data
                 teamName: teamName.value,
                 teamRole: teamRole.value,
                 teamPhoneExt: Number(teamPhoneExt.value),
                 teamEmail: teamEmail.value,
                 dateAdded: Firebase.ServerValue.TIMESTAMP // record the time when request was saved
             });
             postID = newPostRef.key();
             var postIDRef = employeesRef.child(postID);//assign the postIDRef to the new child
             console.log("New Employee "+ teamName.value);
             teamName.value = '';
             teamPhoneExt.value = '';
             teamEmail.value = '';
         };
/************************** end FOR ADDING NEW PROPERTY MANAGEMENT TEAM MEMBER **************************/
         
     }
 
     angular
         .module('propertyManagement')
         .controller('MyAccountCtrl', ['Data', MyAccountCtrl]);
 })();