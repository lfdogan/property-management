(function() {
     function MyAccountCtrl(Data) {
         

         this.Data = Data;
         this.toggleMyAccountDropdown = Data.toggleMyAccountDropdown();
         this.followMyAccountLink = Data.followMyAccountLink();
         this.myPortfolio = Data.myPortfolio();
         this.myBuildings = Data.myBuildings();
         this.billsOwnerDraw = Data.billsOwnerDraw();

         

         
         Data.followMyAccountLink();


         /* new variables setColumnSort and reverse are used to sort table data by column
         * setColumnSort gets information from Data.js inital value is 'payDate'
         * reverse will sort descending for reverse=true, ascending for reverse=false
         * function order() checks if user clicks on same column heading: if true reverse will switch order
         * if false user clicked on different column so set order to descending
         */
         this.setColumnSort = Data.globalcolumnToSortBy;
         this.reverse = true;
         this.order = function(setColumnSort) {    
             if (this.setColumnSort === setColumnSort) { 
                     this.reverse = !this.reverse;
                 } else this.reverse = true;
             this.setColumnSort = setColumnSort;
         };

          /******** FOR ADDING NEW DATA ********/
/*
        var workOrderNumber = document.getElementById('workOrderNumber'); 
        var dateCreated = document.getElementById('dateCreated');
        var dateStarted = document.getElementById('dateStarted');
        var dateCompleted = document.getElementById('dateCompleted');
        var building = document.getElementById('building'); 
        var estimatedCost = document.getElementById('estimatedCost'); 
        var invoicedCost = document.getElementById('invoicedCost'); 
        var status = document.getElementById('status'); 
        var approved = document.getElementById('approved'); 
        var description = document.getElementById('description');
        var closingComments = document.getElementById('closingComments');
        var billsListing = document.getElementById('billsListing');
       
        
        
        var btnNewItemUpdate = document.getElementById('btnNewItemUpdate'); //update button for new bill
    
         
         
         //when user clicks on update button... save to firebase:
         //.set() replaces previous value of 'currentMessage' child with new value from input box
         //.push() adds a new unique key and new value to 'allMessages' child. Generate a reference to a new location and add some data using push(). Calling push() will return a reference to the new data path, which you can use to get the value of its ID or set data to it. 
         // Get the unique ID generated by push(). Calling key() on our push() reference gives us the value of the unique ID.
         // Clear out value of input textbox to empty to prepare for next entry     
         var postID;
         var newPostRef;
         btnNewItemUpdate.addEventListener('click', function(){
             console.log("UPDATE");
             //newPostRef = billsRef.push();
             newPostRef = maintenanceRef.push();
             newPostRef.set({
                 workOrderNumber: workOrderNumber.value, //entered by user
                 dateCreated: dateCreated.value, //entered by user
                 dateStarted: dateStarted.value, //entered by user
                 dateCompleted: dateCompleted.value, //entered by user
                 building: "2165 54th St", //entered by user
                 estimatedCost: estimatedCost.value, //entered by user
                 invoicedCost: invoicedCost.value, //entered by user
                 status: "Closed",
                 approved: approved.value, //entered by user
                 description: description.value, //entered by user
                 closingComments: closingComments.value, //entered by user
                 billsListing: billsListing.value, //entered by user
                 dateAdded: Firebase.ServerValue.TIMESTAMP // record the time when task was entered
             });
             postID = newPostRef.key();
             workOrderNumber.value = '';
             dateCreated.value = '';
             building.value = '2165 54th St';
             estimatedCost.value = '';
             invoicedCost.value = '';
             status.value = 'Closed';
             approved.value = '';
             description.value = '';
         });
         
    */
        
         
         /******************/
         
     }
 
     angular
         .module('propertyManagement')
         .controller('MyAccountCtrl', ['Data', MyAccountCtrl]);
 })();